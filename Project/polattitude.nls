; File with functionality regarding the datastructure, handling, 
; updating and monitoring of the agent's political attitude 
; plane.

; FILE HISTORY:

; 2022-04-14 political attitude position and conviction value 
;            calculation. New conviction value can be later sum 
;            if it pass the neighbour check procudure which uses 
;            Manhattan distancing.
;            Authors: Pratchaya Khansomboon (PK), Eric Lundin 
;            (EL), Marcus Linné (ML), Linnéa Mörk (LM)
; 2022-04-15 Fix center of mass calculation, PK
; 2022-04-21 Political attitude generation for based on the
;            project description. This value is set in setup-heatmap
;            for every agent.
;            Author: EL, PK
; 2022-04-22 Fixes matrix indexing for setup-heatmap and center of
;            mass calculation. This causes problem when we were trying to chart
;            the political attitude percentages.
;            Author: PK
; 2022-04-?? setup-heatmap added by ???
; 2022-04-27 added an alternative to heatmap to test, included create-pol_plane, set_pol_attitude, strongest_pol_attitude, (gks)
; 2022-05-05 Remove alternative heatmap
;
;---------------------------------------------------

to setup-init-attitude-value
  let rows attitude_rows
  let cols attitude_cols
  let polLeft 12.6
  let polSoc 39.5
  let polMid 9.3
  let polCons 22.1
  let polRight 15.7

  let tier1 polLeft
  let tier2 polSoc + tier1
  let tier3 polMid + tier2
  let tier4 polCons + tier3
  let tier5 polRight + tier4

  ask voters [
    let max_heat 10

    let heatmap array:from-list n-values (cols * rows) [1]

    let polVal  random(100)
    let polIndex 0

    if polVal < tier1                    [set polIndex 0]
    if tier1 < polVal and polVal < tier2 [set polIndex 1]
    if tier2 < polVal and polVal < tier3 [set polIndex 2]
    if tier3 < polVal and polVal < tier4 [set polIndex 3]
    if tier4 < polVal and polVal < tier5 [set polIndex 4]
    
    array:set heatmap (1 * cols + polIndex) 2
    add-belief create-belief "attitude-plane" heatmap
    let com center-of-mass heatmap
    set current_pol_attitude item 0 com 
  ]
end

; Generate the attitude plane heatmap and set it in the beliefs hashmap.
to setup-pol-attitude
  setup-init-attitude-value
  ; TODO - MAKE THE MESSAGE MATRIX
end


; TODO - REWRITE TO SUMMING OF MESSAGES
; Sum the heat (x, y, z) conviction on our heatmap.
; This applies to the current agent.
to sum-heatmap [heat]
  let row attitude_rows
  let heatmap (item 1 (item 0 beliefs-of-type "attitude-plane"))
  let hx item 0 heat  ; x
  let hy item 1 heat  ; y
  let hz item 2 heat  ; z
  
  let index hy * row + hx
  let current_z array:item heatmap index
  array:set heatmap index (current_z + hz)
end

; TODO
; LINNEA WRITES THE FORMULA THAT TRIGGERS EVERY MONTH
; THIS WILL ALSO UPDATE current_pol_attitude
to uppdate-pol-attitude
  
end

; Reports a matrix with size rows * cols 
to-report matrix-create[rows, column, value]
  let matrix array:from-list n-values (cols * rows) [value]
  report matrix
end